<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
    <!-- 配置数据源  -->
    <!-- 配置C3P0连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.pass}"/>
    </bean>

    <!--配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:database/mybatis-config.xml" />
        <!--加载mapper映射文件（在mybatis的配置文件中加载mapper映射文件貌似无效）-->
        <property name="mapperLocations" value="classpath*:com/amazon/module/dao/mapper/*.xml"/>
    </bean>

    <!--mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开
        注意：这里扫描的是dao接口，而不是mapper的xml文件-->
        <property name="basePackage" value="com.amazon.module.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!--事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <aop:aspectj-autoproxy expose-proxy="true"/>
    <!--可以使用注解开启事务-->
    <tx:annotation-driven transaction-manager="txManager"/>
    <!--统一配置advice-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS" timeout="10" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" timeout="10" read-only="true"/>
            <tx:method name="search*" propagation="SUPPORTS" timeout="10" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" timeout="10" read-only="true"/>
            <tx:method name="list*" propagation="SUPPORTS" timeout="10" read-only="true"/>
            <tx:method name="count*" propagation="SUPPORTS" timeout="10" read-only="true"/>
            <tx:method name="exist*" propagation="SUPPORTS" timeout="10" read-only="true"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="change*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="execute*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="*" propagation="SUPPORTS" timeout="10" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!--事务切入点（使用上面配置的advice）-->
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* com.amazon.module..service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>

</beans>